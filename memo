#!/bin/bash

set -e

PROGNAME=$(basename $0)
VERSION="0.1"

usage() {
    cat << EOS
Usage: ${PROGNAME} [OPTIONS]...

Options:
  -h,    --help
         --version
         --setdir
  -l[s], --list
  -w,    --write <FileName>
  -s,    --show <FileName1> <FileName2>...
EOS
}

ROOTDIR="${HOME}/.memo"
showlist=0
writefile=""
showfiles=()

if [[ -z "$@" ]]; then
    showlist=1;
fi

for OPT in "$@"
do
    case "$OPT" in
	 '-h'|'--help')
	     usage
	     exit 1
	     ;;
         '--version')
	     echo $VERSION
	     exit 1
	     ;;
	 '--setdir')
	     if [ -e $2 ]; then
		 MEMODIR=$2
		 mkdir ${ROOTDIR} 2>/dev/null && true
		 echo "MEMODIR=${MEMODIR}" > ${ROOTDIR}/config
		 shift 2
	     else
		 echo "$2 is not found!"
		 exit 1
	     fi
	     ;;
	 '-l'|'-ls'|'--list')
	     shift 1
	     showlist=1
	     ;;
	 '-w'|'--write')
	     shift 1
	     writefile=$1
	     ;;
	 '-s'|'--show')
	     shift 1
	     while [[ ! "$1" =~ ^-+|^$ ]]
	     do
		 showfiles+=("$1")
		 shift 1
	     done
	     ;;
	 '--'|'-')
	     shift 1
	     break
	     ;;
    esac
done

if [ -e ${ROOTDIR} ]; then
    if [ -e ${ROOTDIR}"/config" ]; then
	MEMODIR=$(cat ${ROOTDIR}"/config" | grep "MEMODIR" | sed 's/MEMODIR=//')
	echo "Success read confing..."
	echo "Memo directory = ${MEMODIR}"
	echo
    else
	echo "Config file is not found"
	echo "Please setting up for memo"
	echo "memo --setdir <memo archive directory path>"
	exit 1
    fi
else
    echo "Config file is not found"
    echo "Please setting up for memo"
    echo "memo --setdir <memo archive directory path>"
    exit 1
fi

if [ ! -z ${writefile} ]; then
    emacs -nw ${MEMODIR}/${writefile}
fi

if [ ${showlist} = 1 ]; then
    echo "[memo list]"
    ls -1 ${MEMODIR}
fi

res=$((${#showfiles[@]}-1))
if [ ${res} -ge 0 ]; then
    for fname in ${showfiles[@]};
    do
	echo "#==============================#"
	echo -e "\e[37;2m"
	echo "<${fname}>"
	if [ -e ${MEMODIR}/${fname} ]; then
	    cat ${MEMODIR}/${fname}
	else
	    cat ${fname}
	fi
	echo -e "\e[m"
	echo "#==============================#"
	echo
    done
fi
